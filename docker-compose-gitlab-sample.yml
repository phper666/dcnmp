version: "3"
services:
  nginx:
    container_name: dcnmp_nginx
    build:
      context: nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
        TZ: ${TZ}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${CODE_PATH}:/app/www/:rw
      - ${CONF_PATH}/nginx/conf/conf.d:/etc/nginx/conf.d:rw
      - ${CONF_PATH}/nginx/conf/vhost:/etc/nginx/vhost:rw
      - ${CONF_PATH}/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${LOG_PATH}/nginx:/var/log/nginx/:rw
    stdin_open: true
    tty: true
    restart: always
    networks:
      - dcnmp

  redis:
    container_name: dcnmp_redis
    build:
      context: redis
      args:
        REDIS_VERSION: ${REDIS_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        ALPINE_REPOSITORIES_REPLACE: ${ALPINE_REPOSITORIES_REPLACE}
        TZ: ${TZ}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${CONF_PATH}/redis/conf/redis.conf:/etc/redis.conf:rw
      - ${DATA_PATH}/redis:/data:rw
    restart: always
    stdin_open: true
    tty: true
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - dcnmp

  ### PostgreSQL ###########################################
  postgres:
    container_name: dcnmp_postgres
    build:
      context: postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    volumes:
      - ${DATA_PATH}/postgres:/var/lib/postgresql/data
      - ${CONF_PATH}/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SONARQUBE_POSTGRES_INIT=${SONARQUBE_POSTGRES_INIT}
      - SONARQUBE_POSTGRES_DB=${SONARQUBE_POSTGRES_DB}
      - SONARQUBE_POSTGRES_USER=${SONARQUBE_POSTGRES_USER}
      - SONARQUBE_POSTGRES_PASSWORD=${SONARQUBE_POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_INIT=${GITLAB_POSTGRES_INIT}
      - GITLAB_POSTGRES_USER=${GITLAB_POSTGRES_USER}
      - GITLAB_POSTGRES_PASSWORD=${GITLAB_POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_DB=${GITLAB_POSTGRES_DB}
      - HARBOR_POSTGRES_INIT=${HARBOR_POSTGRES_INIT}
      - HARBOR_POSTGRES_USER=${HARBOR_POSTGRES_USER}
      - HARBOR_POSTGRES_PASSWORD=${HARBOR_POSTGRES_PASSWORD}
      - HARBOR_POSTGRES_DB=${HARBOR_POSTGRES_DB}
      - HARBOR_POSTGRES_NOTARY_SIGNER_INIT=${HARBOR_POSTGRES_NOTARY_SIGNER_INIT}
      - HARBOR_POSTGRES_NOTARY_SIGNER_USER=${HARBOR_POSTGRES_NOTARY_SIGNER_USER}
      - HARBOR_POSTGRES_NOTARY_SIGNER_PASSWORD=${HARBOR_POSTGRES_NOTARY_SIGNER_PASSWORD}
      - HARBOR_POSTGRES_NOTARY_SIGNER_DB=${HARBOR_POSTGRES_NOTARY_SIGNER_DB}
      - HARBOR_POSTGRES_NOTARY_SERVER_INIT=${HARBOR_POSTGRES_NOTARY_SERVER_INIT}
      - HARBOR_POSTGRES_NOTARY_SERVER_USER=${HARBOR_POSTGRES_NOTARY_SERVER_USER}
      - HARBOR_POSTGRES_NOTARY_SERVER_PASSWORD=${HARBOR_POSTGRES_NOTARY_SERVER_PASSWORD}
      - HARBOR_POSTGRES_NOTARY_SERVER_DB=${HARBOR_POSTGRES_NOTARY_SERVER_DB}
    networks:
      - dcnmp

  ### PostgreSQL PostGis ###################################
#  postgres-postgis:
#    container_name: dcnmp_postgres_postgis
#    build:
#      context: postgres-postgis
#      args:
#        - POSTGIS_VERSION=${POSTGIS_VERSION}
#        - INSTALL_PGSQL_HTTP_FOR_POSTGIS13=${POSTGIS_INSTALL_PGSQL_HTTP_FOR_POSTGIS13}
#    volumes:
#      - ${DATA_PATH}/postgres:/var/lib/postgresql/data
#    restart: always
#    ports:
#      - "${POSTGRES_PORT}:5432"
#    environment:
#      - POSTGRES_DB=${POSTGRES_DB}
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    networks:
#      - dcnmp

  ### Gitlab ################################################
  gitlab:
    container_name: dcnmp_gitlab
    build:
      context: gitlab
      args:
        - GITLAB_VERSION=${GITLAB_VERSION}
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${GITLAB_DOMAIN_NAME}'
        redis['enable'] = false
        nginx['listen_https'] = false
        nginx['listen_port'] = 80
        nginx['custom_gitlab_server_config'] = "real_ip_header X-Real-IP;\nreal_ip_recursive on;"
        postgresql['enable'] = false
        gitlab_rails['trusted_proxies'] = ['caddy','nginx','apache2']
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_database'] = 8
        gitlab_rails['db_host'] = '${GITLAB_POSTGRES_HOST}'
        gitlab_rails['db_username'] = '${GITLAB_POSTGRES_USER}'
        gitlab_rails['db_password'] = '${GITLAB_POSTGRES_PASSWORD}'
        gitlab_rails['db_database'] = '${GITLAB_POSTGRES_DB}'
        gitlab_rails['initial_root_password'] = '${GITLAB_ROOT_PASSWORD}'
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_HOST_SSH_PORT}
    volumes:
      - ${CONF_PATH}/gitlab/conf:/etc/gitlab
      - ${DATA_PATH}/gitlab/data:/var/opt/gitlab
      - ${LOG_PATH}/gitlab:/var/log/gitlab
    ports:
      - "${GITLAB_HOST_HTTP_PORT}:80"
      - "${GITLAB_HOST_HTTPS_PORT}:443"
      - "${GITLAB_HOST_SSH_PORT}:22"
    depends_on:
      - redis
      - postgres
    restart: always
    networks:
      - dcnmp

  gitlab-runner:
    container_name: dcnmp_gitlab_runner
    build:
      context: gitlab-runner
      args:
        - GITLAB_RUNNER_VERSION=${GITLAB_RUNNER_VERSION}
    environment:
      - CI_SERVER_URL=${GITLAB_CI_SERVER_URL}
      - REGISTRATION_TOKEN=${GITLAB_RUNNER_REGISTRATION_TOKEN}
      - RUNNER_NAME=dcnmp-gitlab-runner
      - REGISTER_NON_INTERACTIVE=${GITLAB_REGISTER_NON_INTERACTIVE}
      - RUNNER_EXECUTOR=shell
    volumes:
      - ${CONF_PATH}/gitlab-runner/conf:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock:rw
    restart: always
    networks:
      - dcnmp

  nexus3:
    container_name: dcnmp_nexus3
    build:
      context: nexus3
      args:
        - NEXUS3_VERSION=${NEXUS3_VERSION}
        - NEXUS3_REPOSITORY_COMPOSER_VERSION=${NEXUS3_REPOSITORY_COMPOSER_VERSION}
    environment:
      - TZ=${TZ}
      - "INSTALL4J_ADD_VM_PARAMS=-Xmx1024m -Xms1024m -XX:MaxDirectMemorySize=512m -Djava.util.prefs.userRoot=/nexus-data/javaprefs"
    volumes:
      - ${DATA_PATH}/nexus3:/nexus-data
    ports:
      - "${NEXUS3_PORT}:8081"
    restart: always
    networks:
      - dcnmp

networks:
  dcnmp:
